{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAkCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CbQ,QAAQC,IAAId,GAEZA,EAAKe,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAGN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAQC,OAAOL,EAAMM,OACrBC,EAAQF,OAAOJ,EAAKK,OACpBE,EAAUH,OAAOH,EAAOI,OAE5B,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAASC,IAAK,CAChC,IAAIC,EAAWD,EAAI,EACnBf,QAAQC,IAAIe,GACZ,IAAIC,EAAWP,EAASK,EAAIF,EAC5Bb,QAAQC,IAAIgB,GACZ3B,EAAc0B,EAAUC,GACrBC,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBP,EAAAkC,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBP,EAAAkC,OAAOG,QAAQ,sBAAoB/B,QAAeC,MAAU,G,CAKlEW,EAAMM,cAAcc,O,IAetBvB,QAAQC,IAAIX,EAAc,IAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  \n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayV= Number(delay.value);\n  let stepV = Number(step.value);\n  let amountV = Number(amount.value);\n\n  for (let i = 0; i < amountV; i++) {\n    let position = i + 1;\n    console.log(position)\n    let delayTgt = delayV + i * stepV\n    console.log(delayTgt)\n    createPromise(position, delayTgt)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }); \n\n  }\n\n  event.currentTarget.reset();\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      };\n    }, delay);\n    \n  });\n};\nconsole.log(createPromise(1000, 1500));\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayV","Number","value","stepV","amountV","i","position1","delayTgt","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.b247721d.js.map"}