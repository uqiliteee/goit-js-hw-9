{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAkCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CPQ,QAAQC,IAAId,GAEZA,EAAKe,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAWN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAQC,OAAOJ,EAAMK,OACrBC,EAAQF,OAAOH,EAAKI,OACpBE,EAAUH,OAAOF,EAAOG,OAEnBG,EAAI,EAAGA,EAAID,EAASC,IAAK,CAChC,IAAIC,EAAWD,EAAI,EACnBhB,QAAQC,IAAIgB,GACZ,IAAIC,EAAWP,EAASK,EAAIF,EAC5Bd,QAAQC,IAAIiB,GACZ5B,EAAc2B,EAAUC,GACrBC,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBP,EAAAoC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE9DgC,OAAM,SAAAJ,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBP,EAAAoC,OAAOI,QAAQ,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAKhEW,EAAMG,cAAcoB,O,IAetB1B,QAAQC,IAAIX,EAAc,IAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  \n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayV= Number(delay.value);\n  let stepV = Number(step.value);\n  let amountV = Number(amount.value);\n\n  for (let i = 0; i < amountV; i++) {\n    let position = i + 1;\n    console.log(position)\n    let delayTgt = delayV + i * stepV\n    console.log(delayTgt)\n    createPromise(position, delayTgt)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }); \n\n  }\n\n  event.currentTarget.reset();\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      };\n    }, delay);\n    \n  });\n};\nconsole.log(createPromise(1000, 1500));\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayV","Number","value","stepV","amountV","i","position1","delayTgt","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.815c31fc.js.map"}